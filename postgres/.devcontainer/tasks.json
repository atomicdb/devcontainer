{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    // See PostgreSQL meson doc link https://wiki.postgresql.org/wiki/Meson
    "version": "2.0.0",
    "tasks": [
        {
            "label": "meson setup",
            "type": "shell",
            "command": "meson",
            "args": [
                "setup",
                "../build",             // out of source tree
                "--buildtype=debug",    // default is debugoptimized
                "-Dcassert=true",
                "-Dtap_tests=enabled",
                "--werror"
            ],
            "problemMatcher": [],
            "detail": "meson setup debug configuration"
        },
        {
            "label": "meson setup release",
            "type": "shell",
            "command": "meson",
            "args": [
                "setup",
                "../build",
                "--buildtype=release",
                "-Dcassert=true",
                "--werror"
            ],
            "problemMatcher": [],
            "detail": "meson setup release configuration"
        },
        {
            "label": "clear build directory",
            "type": "shell",
            "command": "rm -rf ../build",
            "problemMatcher": [],
            "detail": "clear build directory"
        },
        {
            "label": "ninja build",
            "type": "shell",
            "command": "ninja",
            "args":[
                "-C",
                "../build",
                "-j",
                "4"
            ],
            "problemMatcher": [],
            "detail": "build postgres"
        },
        {
            "label": "regression tests",
            "type": "shell",
            "command": "meson test -C ../build -q --print-errorlogs --suite setup --suite regress",
            "problemMatcher": [],
            "detail": "run main regression tests"
        },
        {
            "label": "check-world",
            "type": "shell",
            "command": "meson test -C ../build -q --print-errorlogs",
            "problemMatcher": [],
            "detail": "run all tests"
        },
        {
            "label": "ninja install",
            "type": "shell",
            "command": "sudo ninja install -C ../build",
            "problemMatcher": [],
            "detail": "install pgsql"
        },
        {
            "label": "init cluster",
            "type": "shell",
            "command": "/usr/local/pgsql/bin/initdb",
            "args": [
                "-D",
                "/home/postgres/pgdata"
            ],
            "problemMatcher": [],
            "detail": "init cluster using initdb"
        },
        {
            "label": "start cluster",
            "type": "shell",
            "command": "/usr/local/pgsql/bin/pg_ctl",
            "args": [
                "-D",
                "/home/postgres/pgdata",
                "-l",
                "/home/postgres/pgdata/logfile",
                "start"
            ],
            "problemMatcher": [],
            "detail": "start db cluster"
        },
        {
            "label": "restart cluster",
            "type": "shell",
            "command": "/usr/local/pgsql/bin/pg_ctl",
            "args": [
                "-D",
                "/home/postgres/pgdata",
                "-l",
                "/home/postgres/pgdata/logfile",
                "restart"
            ],
            "problemMatcher": [],
            "detail": "restart db cluster"
        },
        {
            "label": "stop cluster",
            "type": "shell",
            "command": "/usr/local/pgsql/bin/pg_ctl",
            "args": [
                "-D",
                "/home/postgres/pgdata",
                "stop"
            ],
            "problemMatcher": [],
            "detail": "stop db cluster"
        },
        {
            "label": "clear pgdata",
            "type": "shell",
            "command": "rm -rf /home/postgres/pgdata",
            "problemMatcher": [],
            "detail": "clear pgdata directory"
        },
        {
            "label": "install pg_bsd_indent",
            "type": "shell",
            "command": "sudo cp ../build/src/tools/pg_bsd_indent/pg_bsd_indent /usr/local/bin",
            "problemMatcher": [],
            "detail": "install pg_bsd_indent to /usr/local/bin"
        },
        {
            "label": "pgindent",
            "type": "shell",
            "command": "src/tools/pgindent/pgindent ${input:selectDir}",
            "problemMatcher": [],
            "detail": "run pgindent on selected directory"
        },
        {
            "label": "format patch",
            "type": "shell",
            "command": "git format-patch -o /opt/freedom/patches -${input:formatPatchNumber} -v ${input:formatPatchVersion}",
            "problemMatcher": [],
            "detail": "generate patches from the topmost <n> commits"
        },
        {
            "label": "apply patch",
            "type": "shell",
            "command": "git am /opt/freedom/patches/${input:patchFile}",
            "problemMatcher": [],
            "detail": "apply patch"
        },
        {
            "label": "clear patch directory",
            "type": "shell",
            "command": "rm -rf /opt/freedom/patches/*",
            "problemMatcher": [],
            "detail": "clear patch directory"
        },
        {
            "label": "generate flamegraph",
            "type": "shell",
            "command": "perf record -o ../perf_${input:processId}.data -g -F 99 -p ${input:processId} -- sleep 60 && perf script -i ../perf_${input:processId}.data | /opt/freedom/tools/FlameGraph/stackcollapse-perf.pl | /opt/freedom/tools/FlameGraph/flamegraph.pl > /opt/freedom/perf_${input:processId}.svg",
            "problemMatcher": [],
            "detail": "generate flamegraph"
        }
    ],
    "inputs": [
        {
            "id": "selectDir",
            "type": "command",
            "command": "extension.commandvariable.pickStringRemember",
            "args": {
                "description": "Which directory to run for pgindent?",
                "options": [
                    ["Use previous directory", "${remember:srcSubDir}"],
                    ["Pick directory", "${pickFile:srcSubDir}"]
                ],
                "default": null,
                "pickFile": {
                    "srcSubDir": {
                        "description": "Which directory?",
                        "include": "src/**",
                        "showDirs": true,
                        "keyRemember": "srcSubDir"
                    }
                }
            }
        },
        {
            "id": "formatPatchNumber",
            "description": "patches from the topmost <n> commits",
            "type": "promptString",
            "default": "1"
        },
        {
            "id": "formatPatchVersion",
            "description": "<n>-th iteration of the topic",
            "type": "promptString",
            "default": "1"
        },
        {
            "id": "patchFile",
            "description": "Which patch file to apply?",
            "type": "promptString",
            "default": "*"
        },
        {
            "id": "processId",
            "description": "Which process to perf?",
            "type": "promptString",
            "default": ""
        }
    ]
}
